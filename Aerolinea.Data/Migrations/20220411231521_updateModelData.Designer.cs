// <auto-generated />
using System;
using Aerolinea.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aerolinea.Data.Migrations
{
    [DbContext(typeof(AirlineContext))]
    [Migration("20220411231521_updateModelData")]
    partial class updateModelData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aerolinea.Data.Models.Airline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Airline");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.Airplane", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AirlineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AirlineId");

                    b.ToTable("Airplane");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AirplaneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeFlight")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FlightPathId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PassageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StateFlightId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AirplaneId");

                    b.HasIndex("FlightPathId");

                    b.HasIndex("PassageId");

                    b.HasIndex("StateFlightId");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.FlightPath", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("FlightPath");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.Passage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PositionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypePassage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Passage");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CellPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirtName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TypeDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TypeDocumentId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.StateFlight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StateFlight");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.TypeDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TypeDocument");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.Airplane", b =>
                {
                    b.HasOne("Aerolinea.Data.Models.Airline", null)
                        .WithMany("ListAirplane")
                        .HasForeignKey("AirlineId");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.City", b =>
                {
                    b.HasOne("Aerolinea.Data.Models.Department", null)
                        .WithMany("ListCity")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.Department", b =>
                {
                    b.HasOne("Aerolinea.Data.Models.Country", null)
                        .WithMany("ListDepartment")
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.Flight", b =>
                {
                    b.HasOne("Aerolinea.Data.Models.Airplane", null)
                        .WithMany("ListFlight")
                        .HasForeignKey("AirplaneId");

                    b.HasOne("Aerolinea.Data.Models.FlightPath", null)
                        .WithMany("ListFlight")
                        .HasForeignKey("FlightPathId");

                    b.HasOne("Aerolinea.Data.Models.Passage", null)
                        .WithMany("ListFlight")
                        .HasForeignKey("PassageId");

                    b.HasOne("Aerolinea.Data.Models.StateFlight", null)
                        .WithMany("ListFlight")
                        .HasForeignKey("StateFlightId");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.FlightPath", b =>
                {
                    b.HasOne("Aerolinea.Data.Models.City", null)
                        .WithMany("ListFlightPath")
                        .HasForeignKey("CityId");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.Passage", b =>
                {
                    b.HasOne("Aerolinea.Data.Models.Person", null)
                        .WithMany("ListPassage")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.Person", b =>
                {
                    b.HasOne("Aerolinea.Data.Models.TypeDocument", null)
                        .WithMany("ListPeople")
                        .HasForeignKey("TypeDocumentId");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.Airline", b =>
                {
                    b.Navigation("ListAirplane");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.Airplane", b =>
                {
                    b.Navigation("ListFlight");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.City", b =>
                {
                    b.Navigation("ListFlightPath");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.Country", b =>
                {
                    b.Navigation("ListDepartment");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.Department", b =>
                {
                    b.Navigation("ListCity");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.FlightPath", b =>
                {
                    b.Navigation("ListFlight");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.Passage", b =>
                {
                    b.Navigation("ListFlight");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.Person", b =>
                {
                    b.Navigation("ListPassage");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.StateFlight", b =>
                {
                    b.Navigation("ListFlight");
                });

            modelBuilder.Entity("Aerolinea.Data.Models.TypeDocument", b =>
                {
                    b.Navigation("ListPeople");
                });
#pragma warning restore 612, 618
        }
    }
}
